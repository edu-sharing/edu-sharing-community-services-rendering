version: '3.7'

services:

  services-rendering-cache:
    image: "${docker.edu_sharing.community.common.redis}"
    container_name: "cache_${COMPOSE_PROJECT_NAME}"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    expose:
      - 6379

  services-rendering-database:
    image: "${docker.edu_sharing.community.common.postgresql}"
    container_name: "services-rendering-database_${COMPOSE_PROJECT_NAME}"
    environment:
      POSTGRESQL_DATABASE: "${SERVICES_RENDERING_DATABASE_NAME:-rendering}"
      POSTGRESQL_ROOT_PASSWORD: "${SERVICES_RENDERING_DATABASE_PASS:-rendering}"
      POSTGRESQL_PASSWORD: "${SERVICES_RENDERING_DATABASE_PASS:-rendering}"
      POSTGRESQL_USER: "${SERVICES_RENDERING_DATABASE_USER:-rendering}"
    expose:
      - "5432"
    shm_size: 256m
    volumes:
      - "services-rendering-database-volume-data:/bitnami/postgresql"

  services-rendering-service:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-service:${docker.tag}"
    container_name: "services-rendering-service_${COMPOSE_PROJECT_NAME}"
    environment:
      CACHE_CLUSTER: "false"
      CACHE_DATABASE: "0"
      CACHE_HOST: services-rendering-cache
      CACHE_PORT: "6379"
      SERVICES_RENDERING_DATABASE_DRIV: pgsql
      SERVICES_RENDERING_DATABASE_HOST: services-rendering-database
      SERVICES_RENDERING_DATABASE_NAME: "${SERVICES_RENDERING_DATABASE_NAME:-rendering}"
      SERVICES_RENDERING_DATABASE_PASS: "${SERVICES_RENDERING_DATABASE_PASS:-rendering}"
      SERVICES_RENDERING_DATABASE_PORT: "5432"
      SERVICES_RENDERING_DATABASE_USER: "${SERVICES_RENDERING_DATABASE_USER:-rendering}"
      SERVICES_RENDERING_SERVICE_GDPR_ENABLED: "${SERVICES_RENDERING_SERVICE_GDPR_ENABLED:-false}"
      SERVICES_RENDERING_SERVICE_GDPR_MODULES: "${SERVICES_RENDERING_SERVICE_GDPR_MODULES:-}"
      SERVICES_RENDERING_SERVICE_GDPR_URLS: "${SERVICES_RENDERING_SERVICE_GDPR_URLS:-}"
      SERVICES_RENDERING_SERVICE_HOST_EXTERNAL: "${SERVICES_RENDERING_SERVICE_HOST:-rendering.services.127.0.0.1.nip.io}"
      SERVICES_RENDERING_SERVICE_HOST_INTERNAL: services-rendering-service
      SERVICES_RENDERING_SERVICE_PLUGINS: "${SERVICES_RENDERING_SERVICE_PLUGINS:-}"
      SERVICES_RENDERING_SERVICE_PROT_EXTERNAL: "${SERVICES_RENDERING_SERVICE_PROT:-http}"
      SERVICES_RENDERING_SERVICE_PORT_EXTERNAL: "${SERVICES_RENDERING_SERVICE_PORT:-9100}"
      SERVICES_RENDERING_SERVICE_PATH_EXTERNAL: "${SERVICES_RENDERING_SERVICE_PATH:-/esrender}"
      SERVICES_RENDERING_SERVICE_PORT_INTERNAL: "8080"
      SERVICES_RENDERING_SERVICE_PROXY_NONPROXYHOSTS: "${NON_PROXY_HOST:-}"
      SERVICES_RENDERING_SERVICE_PROXY_HOST: "${PROXY_HOST:-}"
      SERVICES_RENDERING_SERVICE_PROXY_PORT: "${PROXY_PORT:-}"
      SERVICES_RENDERING_SERVICE_PROXY_USER: "${PROXY_USER:-}"
      SERVICES_RENDERING_SERVICE_PROXY_PASS: "${PROXY_PASS:-}"
      SERVICES_RENDERING_SERVICE_VIEWER_ENABLED: "${SERVICES_RENDERING_SERVICE_VIEWER_ENABLED:-true}"
      SERVICES_RENDERING_RENDERMOODLE_URL: "${SERVICES_RENDERING_RENDERMOODLE_URL:-}"
      SERVICES_RENDERING_RENDERMOODLE_TOKEN: "${SERVICES_RENDERING_RENDERMOODLE_TOKEN:-}"
      SERVICES_RENDERING_RENDERMOODLE_CATEGORY_ID: "${SERVICES_RENDERING_RENDERMOODLE_CATEGORY_ID:-1}"
      SERVICES_RENDERING_AUDIO_FORMATS: "${SERVICES_RENDERING_AUDIO_FORMATS:-mp3}"
      SERVICES_RENDERING_VIDEO_FORMATS: "${SERVICES_RENDERING_VIDEO_FORMATS:-mp4,webm}"
      SERVICES_RENDERING_VIDEO_RESOLUTIONS: "${SERVICES_RENDERING_VIDEO_RESOLUTIONS:-240,720,1080}"
      SERVICES_RENDERING_VIDEO_DEFAULT_RESOLUTION: "${SERVICES_RENDERING_VIDEO_DEFAULT_RESOLUTION:-720}"
      REPOSITORY_SERVICE_HOST: repository-service
      REPOSITORY_SERVICE_PORT: "8080"
    expose:
      - "8080"
    ports:
      - "${COMMON_BIND_HOST:-127.0.0.1}:${SERVICES_RENDERING_SERVICE_PORT_HTTP:-9100}:8081"
    volumes:
      - "services-rendering-service-volume-config:/var/cache/esrender/config"
      - "services-rendering-service-volume-data:/var/cache/esrender/data"
    depends_on:
      - services-rendering-database

  services-rendering-service-init:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-service:${docker.tag}"
    container_name: "services-rendering-service-init_${COMPOSE_PROJECT_NAME}"
    entrypoint: ["init.sh"]
    environment:
      SERVICES_RENDERING_SERVICE_HOST_INTERNAL: services-rendering-service
      SERVICES_RENDERING_SERVICE_PORT_INTERNAL: "8080"
      REPOSITORY_SERVICE_HOST: repository-service
      REPOSITORY_SERVICE_PORT: "8080"
      REPOSITORY_SERVICE_ADMIN_PASS: "${REPOSITORY_SERVICE_ADMIN_PASS:-admin}"
    depends_on:
      - services-rendering-service


  services-rendering-service-cache-cleaner:
    image: "${docker.repository}/${docker.prefix}-deploy-docker-build-service:${docker.tag}"
    container_name: "services-rendering-service-cache-cleaner_${COMPOSE_PROJECT_NAME}"
    command: [ "cron.sh" ]
    environment:
      SERVICES_RENDERING_DATABASE_DRIV: pgsql
      SERVICES_RENDERING_DATABASE_HOST: services-rendering-database
      SERVICES_RENDERING_DATABASE_NAME: "${SERVICES_RENDERING_DATABASE_NAME:-rendering}"
      SERVICES_RENDERING_DATABASE_PASS: "${SERVICES_RENDERING_DATABASE_PASS:-rendering}"
      SERVICES_RENDERING_DATABASE_PORT: "5432"
      SERVICES_RENDERING_DATABASE_USER: "${SERVICES_RENDERING_DATABASE_USER:-rendering}"
      SERVICES_RENDERING_SERVICE_CACHE_CLEANER_SCHEDULE: "${SERVICES_RENDERING_SERVICE_CACHE_CLEANER_SCHEDULE:-0 0 * * 0}"
    volumes:
      - "services-rendering-service-volume-config:/var/cache/esrender/config"
      - "services-rendering-service-volume-data:/var/cache/esrender/data"
    depends_on:
      - services-rendering-service

volumes:
  services-rendering-database-volume-data:
  services-rendering-service-volume-config:
  services-rendering-service-volume-data: